generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

// ============================================
// AUTHENTICATION & ACCOUNTS
// ============================================

model Account {
  id String @id @default(uuid())

  name     String
  email    String @unique
  password String // bcrypt hash

  plan          PlanType  @default(FREE)
  planExpiresAt DateTime?

  maxProjects Int @default(3)
  maxClients  Int @default(10)

  isActive Boolean @default(true)

  lastLoginAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  clients  Client[]
  projects Project[]

  @@schema("auth")
}

enum PlanType {
  FREE
  BASIC
  PROFESSIONAL
  ENTERPRISE

  @@schema("auth")
}

// ============================================
// PROJECTS & TASKS
// ============================================

model Project {
  id String @id @default(uuid())

  title       String
  description String

  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  tasks Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([accountId])
  @@schema("public")
}

model Task {
  id String @id @default(uuid())

  title       String
  description String

  status   Status   @default(TODO)
  priority Priority @default(LOW)

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
  @@index([status])
  @@index([priority])
  @@schema("public")
}

enum Status {
  TODO
  DOING
  DONE

  @@schema("public")
}

enum Priority {
  LOW
  MEDIUM
  HIGH

  @@schema("public")
}

// ============================================
// CRM - CLIENTS
// ============================================

model Client {
  id String @id @default(uuid())

  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  contactPerson String

  email          String
  phone          String
  secundaryEmail String?
  secundaryPhone String?

  status   ClientStatus
  category ClientCategory

  manager String

  hiringDate    DateTime
  nextDueDate   DateTime?
  lastContact   DateTime?
  monthlyAmount String?

  address Json?

  cnpj     String?
  cpf      String?
  website  String?
  linkedin String?

  paymentMethod PaymentMethod?

  notes String? @db.Text

  @@index([accountId])
  @@index([status])
  @@index([category])
  @@index([email])
  @@index([manager])
  @@schema("public")
}

enum ClientStatus {
  ACTIVE
  NEGOTIATION
  INACTIVE
  PROSPECTUS

  @@schema("public")
}

enum ClientCategory {
  BASIC
  PREMIUM
  ENTERPRISE

  @@schema("public")
}

enum PaymentMethod {
  CREDIT_CARD
  BOLETO
  PIX
  TRANSFER

  @@schema("public")
}
